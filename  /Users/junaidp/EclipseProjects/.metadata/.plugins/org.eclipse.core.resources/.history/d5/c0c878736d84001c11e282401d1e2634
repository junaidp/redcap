package com.analytics.client.view.menus.dashboard.steps.clinicaldatamodel.datamodel;

import com.analytics.shared.TestData;
import com.analytics.shared.dtos.DataModelDTO;
import com.google.gwt.core.client.GWT;
import com.google.gwt.editor.client.Editor.Path;
import com.google.gwt.event.logical.shared.SelectionEvent;
import com.google.gwt.event.logical.shared.SelectionHandler;
import com.google.gwt.user.client.Window;
import com.sencha.gxt.core.client.ValueProvider;
import com.sencha.gxt.data.shared.LabelProvider;
import com.sencha.gxt.data.shared.ListStore;
import com.sencha.gxt.data.shared.ModelKeyProvider;
import com.sencha.gxt.data.shared.PropertyAccess;
import com.sencha.gxt.widget.core.client.ListView;
import com.sencha.gxt.widget.core.client.container.VerticalLayoutContainer;
import com.sencha.gxt.widget.core.client.form.ListField;

public class DataModelListWidget extends VerticalLayoutContainer {

		
	public interface Properties extends PropertyAccess<DataModelDTO> {
		@com.google.gwt.editor.client.Editor.Path("key")
		ModelKeyProvider<DataModelDTO> key();
		LabelProvider<DataModelDTO> name();


		@Path("name")
		ValueProvider<DataModelDTO, String> nameProp();
	}	

	Properties properties = GWT.create(Properties.class);


	public DataModelListWidget() {


		ListStore<DataModelDTO> dataModels = new ListStore<DataModelDTO>(properties.key());
		dataModels.addAll(testData.getDataModelList());

		ListView<DataModelDTO, String> listView = new ListView<DataModelDTO, String>(dataModels, properties.nameProp());

		ListField<DataModelDTO, String> listField = new ListField<DataModelDTO, String>(listView);

		add(listField);

		listView.getSelectionModel().addSelectionHandler(new SelectionHandler<DataModelDTO>() {
			
			@Override
			public void onSelection(SelectionEvent<DataModelDTO> event) {
				Window.alert(event.getSelectedItem().getName());
			}
		});

	}

	
}
